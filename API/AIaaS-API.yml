openapi: '3.0.2'
info:
  title: Artificial Intelligence as a Service (AIaaS) API
  version: '0.1'
servers:
  - url: http://x570-test.local:8080/api/v1/
  - url: http://localhost:8080/api/v1/
paths:
  # Image API-s:
  /images/classify:
    post:
      tags:
        - Images
      parameters:
        - in: query
          name: model
          schema:
            type: string
          required: true
          description: Model name
          example: resnet50
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageClassifyResponse'
        '500':
          description: ERROR
  /images/classify/batch:
    post:
      tags:
        - Images
      parameters:
        - in: query
          name: model
          schema:
            type: string
          required: true
          description: Model name
          example: resnet50
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageBatchClassifyResponse'
        '500':
          description: ERROR
  /images/face-detect:
    post:
      tags:
        - Images
      parameters:
        - in: query
          name: model
          schema:
            type: string
          required: true
          description: Model name
          example: densebox_320_320
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaceDetectResponse'
        '500':
          description: ERROR
  /images/lane-detect:
    post:
      tags:
        - Images
      parameters:
        - in: query
          name: model
          schema:
            type: string
          required: true
          description: Model name
          example: vpgnet_pruned_0_99
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaneDetectResponse'
        '500':
          description: ERROR

  # Video API-s:
  /videos/yolo-v3:
    post:
      tags:
        - Videos
      parameters:
        - in: query
          name: model
          schema:
            type: string
          required: true
          description: Model name
          example: yolov3_adas_pruned_0_9
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                video:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YoloV3VideoResponse'
        '500':
          description: ERROR

components:
  schemas:
    # Response Types:
    ImageClassifyResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            results:
              description: List of results
              type: array
              items:
                $ref: '#/components/schemas/ImageClassifyItem'
    ImageClassifyItem:
      type: object
      properties:
        class:
          type: string
          example: "coral"
          description: Result class.
        score:
          type: number
          example: 0.98
          description: Result confidence/score.
        idx:
          type: number
          example: 213
          description: Result class index.
    ImageBatchClassifyResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            results:
              description: List of results
              type: array
              items:
                $ref: '#/components/schemas/ImageBatchClassifyItem'
    ImageBatchClassifyItem:
      type: object
      properties:
        image:
          type: string
          example: "sample_classify.jpg"
          description: Source image.
        results:
          description: List of results
          type: array
          items:
            $ref: '#/components/schemas/ImageClassifyItem'
    FaceDetectResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            results:
              description: List of faces detected.
              type: array
              items:
                $ref: '#/components/schemas/FaceDetectItem'
    YoloV3VideoResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            frames:
              description: List of frames with detection results.
              type: array
              items:
                $ref: '#/components/schemas/YoloV3FrameItem'
    # Data Types:
    FaceDetectItem:
      type: object
      properties:
        x:
          type: number
          example: 10
          description: X position of the rectangle
        y:
          type: number
          example: 10
          description: Y position of the rectangle
        width:
          type: number
          example: 100
          description: Width of the rectangle
        height:
          type: number
          example: 100
          description: Height of the rectangle
        score:
          type: number
          example: 0.98
          description: Result confidence/score.
    LaneDetectResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            results:
              description: List of lanes detected.
              type: array
              items:
                $ref: '#/components/schemas/LaneDetectItem'
    LaneDetectItem:
      type: object
      description: A lane line
      properties:
        type:
          type: number
          example: 1
          description: Line type
        points:
          type: array
          description: Points in the line.
          items:
            type: object
            properties:
              x:
                type: number
                description: X coordinate
              y:
                type: number
                description: Y coordinate
    YoloV3FrameItem:
      type: object
      description: Yolo V3 Frame result
      properties:
        frame:
          type: number
          example: 1
          description: Frame number
        bboxes:
          type: array
          description: Bounding boxes with detected object.
          items:
            type: object
            properties:
              label:
                type: number
                description: Label number
              x:
                type: number
                description: X coordinate
              y:
                type: number
                description: Y coordinate
              width:
                type: number
                description: Width
              height:
                type: number
                description: Height